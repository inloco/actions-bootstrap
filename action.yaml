name: Bootstrap
description: Bootstrap workflow setup for organization repositories
author: Incognia
inputs:
  checkout:
    description: Whether to checkout the repository
    default: true
    required: false
  install-packages:
    description: Packages to install
    required: false
  mask:
    description: Environment variables to mask
    required: false
  setup-go:
    description: Go version to be passed to inloco/actions-setup-go
    required: false
  setup-java:
    description: Java version to be passed to inloco/actions-setup-java
    required: false
  setup-node:
    description: Node version to be passed to actions/setup-node
    required: false
  setup-python:
    description: Python version to be passed to actions/setup-python
    required: false
runs:
  using: composite
  steps:
    # These packages should be installed in macOS basic image for CI
    # This should be temporary until this setup is done in the macOS CI image
    - name: Install Basic Packages for macOS
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install gnu-sed
        echo "$(brew --prefix)/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH
        brew install gh
    - name: Export Environment Context and Mask Secrets
      uses: inloco/actions-env-context@HEAD
      with:
        mask: ${{ inputs.mask }}
    - name: Generate Installation Access Token
      id: iat
      uses: inloco/actions-githubapp-installationaccesstoken@HEAD
      if: env.GITHUB_APP_ID && env.GITHUB_APP_PK
      with:
        app-id: ${{ env.GITHUB_APP_ID }}
        app-pk: ${{ env.GITHUB_APP_PK }}
    - name: Log Into GitHub CLI
      shell: bash
      run: gh auth login --with-token <<< ${{ steps.iat.outputs.instl-token || github.token }}
    - name: Configure Clone with IAT
      if: steps.iat.outputs.instl-token
      shell: bash
      run: sudo git config --system url."https://x-access-token:${{ steps.iat.outputs.instl-token }}@github.com/".insteadOf 'https://github.com/'
    - name: Checkout Code
      uses: actions/checkout@v3
      if: inputs.checkout
      with:
        fetch-depth: 0
        submodules: ${{ steps.iat.outputs.instl-token && 'recursive' || 'false' }}
        token: ${{ steps.iat.outputs.instl-token || github.token }}
    - name: Install Packages (Ubuntu)
      if: inputs.install-packages && runner.os == 'Linux'
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y ${{ inputs.install-packages }}
    - name: Install Packages (macOS)
      if: inputs.install-packages && runner.os == 'macOS'
      shell: bash
      run: |
        brew install ${{ inputs.install-packages }}
    - name: Setup Go
      uses: inloco/actions-setup-go@HEAD
      if: inputs.setup-go
      with:
        go-version: ${{ inputs.setup-go }}
    - name: Setup Java
      uses: inloco/actions-setup-java@HEAD
      if: inputs.setup-java
      with:
        java-version: ${{ inputs.setup-java }}
    - name: Setup Node
      uses: inloco/actions-setup-node@HEAD
      if: inputs.setup-node
      with:
        node-version: ${{ inputs.setup-node }}
    - name: Setup Python
      uses: actions/setup-python@v3
      if: inputs.setup-python
      with:
        python-version: ${{ inputs.setup-python }}
